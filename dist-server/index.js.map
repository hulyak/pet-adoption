{"version":3,"sources":["../src/ThemeContext.js","../src/Carousel.js","../src/ErrorBoundary.js","../src/Modal.js","../src/Details.js","../src/Pet.js","../src/Results.js","../src/useBreedList.js","../src/SearchParams.js","../src/App.js","index.js"],"names":["ThemeContext","Carousel","Component","active","event","setState","target","dataset","index","render","state","images","props","map","photo","handleIndexClick","ErrorBoundary","hasError","redirect","getDerivedStateFromError","componentDidCatch","error","info","console","setTimeout","children","Modal","modalRoot","document","getElementById","elRef","current","createElement","appendChild","removeChild","Details","loading","showModal","window","location","componentDidMount","res","fetch","match","params","id","json","Object","assign","pets","log","animal","breed","city","description","name","theme","backgroundColor","toggleModal","adopt","DetailsWithRouter","DetailsWithErrorBoundary","Pet","hero","length","Results","pet","localCache","useBreedList","breedList","setBreedList","status","setStatus","requestBreedList","breeds","SearchParams","ANIMALS","setLocation","setAnimal","setBreed","setPets","setTheme","requestPets","e","preventDefault","value","App","background","PORT","process","env","html","fs","readFileSync","toString","parts","split","app","use","express","static","req","staticContext","reactMarkup","url","statusCode","send","end","listen"],"mappings":"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","file":"index.js","sourceRoot":"../server","sourcesContent":["import { createContext } from \"react\";\n\nconst ThemeContext = createContext([\"green\", function () {}]);\n\nexport default ThemeContext;\n","import { Component } from \"react\";\n\nclass Carousel extends Component {\n  state = { active: 0 };\n\n  static defaultProps = {\n    images: [\"http://pets-images.dev-apis.com/pets/none.jpg\"],\n  };\n\n  handleIndexClick = (event) => {\n    this.setState({\n      // type coercion with plus sign\n      active: +event.target.dataset.index,\n    });\n  };\n\n  render() {\n    const { active } = this.state;\n    const { images } = this.props;\n\n    return (\n      <div className=\"carousel\">\n        <img src={images[active]} alt=\"animal\" />\n        <div className=\"carousel-smaller\">\n          {images.map((photo, index) => (\n            <img\n              key={photo}\n              src={photo}\n              className={index === active ? \"active\" : \"\"}\n              alt=\"animal thumbnail\"\n              data-index={index}\n              onClick={this.handleIndexClick}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nclass ErrorBoundary extends Component {\n  state = { hasError: false, redirect: false };\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, info) {\n    console.error(\"ErrorBoundary caught an error\", error, info);\n    setTimeout(() => this.setState({ redirect: true }), 5000);\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />;\n    } else if (this.state.hasError) {\n      return (\n        <h2>\n          This listing has an error. <Link to=\"/\">Click here</Link> to go back\n          to the homepage or wait five seconds.\n        </h2>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import { useEffect, useRef } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nlet modalRoot;\n\nconst Modal = ({ children }) => {\n  modalRoot = modalRoot ? modalRoot : document.getElementById(\"modal\");\n  \n  const elRef = useRef(null);\n  if (!elRef.current) {\n    elRef.current = document.createElement(\"div\");\n  }\n\n  useEffect(() => {\n    modalRoot.appendChild(elRef.current);\n    return () => modalRoot.removeChild(elRef.current); // cleanup\n  }, []);\n\n  return createPortal(<div>{children}</div>, elRef.current);\n};\n\nexport default Modal;\n","import { Component, lazy} from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Carousel from \"./Carousel\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport ThemeContext from \"./ThemeContext\";\n// const Modal = lazy(() => import('./Modal'))\nimport Modal from './Modal'\n\nclass Details extends Component {\n  state = { loading: true, showModal: false };\n\n  async componentDidMount() {\n    const res = await fetch(\n      `http://pets-v2.dev-apis.com/pets?id=${this.props.match.params.id}`\n    );\n    const json = await res.json();\n\n    this.setState(\n      Object.assign( \n        {\n          loading: false,\n        },\n        json.pets[0]\n      )\n    );\n  }\n\n  toggleModal = () => this.setState({ showModal: !this.state.showModal });\n  adopt = () => (window.location = \"http://bit.ly/pet-adopt\");\n\n  render() {\n    if (this.state.loading) {\n      return <h2>Loading</h2>;\n    }\n    console.log(this.state);\n    const { animal, breed, city, state, description, name, images, showModal } =\n      this.state;\n\n    return (\n      <div className=\"details\">\n        <Carousel images={images} />\n        <div>\n          <h1>{name}</h1>\n          <h2>{`${animal} - ${breed} - ${city}, ${state}`}</h2>\n          <ThemeContext.Consumer>\n            {([theme]) => (\n              <button\n                style={{ backgroundColor: theme }}\n                onClick={this.toggleModal}\n              >\n                Adopt {name}\n              </button>\n            )}\n          </ThemeContext.Consumer>\n\n          <p>{description}</p>\n          {showModal ? (\n            <Modal>\n              <div>\n                <h1>Would you like to adopt {name}?</h1>\n                <div className=\"buttons\">\n                  <button onClick={this.adopt}>Yes</button>\n                  <button onClick={this.toggleModal}>No</button>\n                </div>\n              </div>\n            </Modal>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst DetailsWithRouter = withRouter(Details);\n\nexport default function DetailsWithErrorBoundary() {\n  return (\n    <ErrorBoundary>\n      <DetailsWithRouter />\n    </ErrorBoundary>\n  );\n}\n","import { Link } from \"react-router-dom\";\n\nconst Pet = ({ name, breed, animal, images, location, id }) => {\n  let hero = \"https://pets-images.dev-apis.com/pets/none.jpg\";\n  if (images.length) {\n    hero = images[0];\n  }\n  return (\n    <Link to={`/details/${id}`} className=\"relative block\">\n      <div>\n        <img src={hero} alt={name} />\n      </div>\n      <div className=\"absolute bottom-0 left-0 bg-gradient-to-tr from-white to-transparent pr-2 pt-2\">\n        <h2>{name}</h2>\n        <h2>{`${animal} - ${breed} - ${location}`}</h2>\n      </div>\n    </Link>\n  );\n};\n\nexport default Pet;\n","import React from \"react\";\nimport Pet from \"./Pet\";\n\nconst Results = ({ pets }) => {\n  return (\n    <div className=\"grid gap-4 grid-cols-1 lg:grid-cols-3 sm:grid-cols-2\">\n      {!pets.length ? (\n        <h2>No pets found!</h2>\n      ) : (\n        pets.map((pet) => (\n          <Pet\n            name={pet.name}\n            breed={pet.breed}\n            animal={pet.animal}\n            key={pet.id}\n            id={pet.id}\n            images={pet.images}\n            location={`${pet.city}, ${pet.state}`}\n          />\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default Results;\n","import { useState, useEffect } from \"react\";\n\nconst localCache = {};\n\nexport default function useBreedList(animal) {\n  const [breedList, setBreedList] = useState([]);\n  const [status, setStatus] = useState(\"unloaded\");\n\n  useEffect(() => {\n    if (!animal) {\n      setBreedList([]);\n    } else if (localCache[animal]) {\n      setBreedList(localCache[animal]);\n    } else {\n      requestBreedList();\n    }\n\n    async function requestBreedList() {\n      setBreedList([]);\n      setStatus(\"loading\");\n\n      const res = await fetch(\n        `http://pets-v2.dev-apis.com/breeds?animal=${animal}`\n      );\n      const json = await res.json();\n      localCache[animal] = json.breeds || [];\n      console.log(json);\n      setBreedList(localCache[animal]);\n      setStatus(\"loaded\");\n    }\n  }, [animal]);\n\n  return [breedList, status];\n}\n","import { useState, useEffect, useContext } from \"react\";\nimport ThemeContext from \"./ThemeContext\";\nimport Results from \"./Results\";\nimport useBreedList from \"./useBreedList\";\n\nconst ANIMALS = [\"bird\", \"cat\", \"dog\", \"rabbit\", \"reptile\"];\n\nconst SearchParams = () => {\n  const [location, setLocation] = useState(\"\");\n  const [animal, setAnimal] = useState(\"\");\n  const [breed, setBreed] = useState(\"\");\n  const [pets, setPets] = useState([]);\n\n  // custom hook\n  const [breeds] = useBreedList(animal);\n  const [theme, setTheme] = useContext(ThemeContext);\n\n  async function requestPets() {\n    const res = await fetch(\n      `https://pets-v2.dev-apis.com/pets?animal=${animal}&location=${location}&breed=${breed}`\n    );\n    const json = await res.json();\n    console.log(json);\n    setPets(json.pets);\n  }\n\n  useEffect(() => {\n    requestPets();\n  }, []); // eslint-disable-line react-hooks-exhaustive-deps\n\n  return (\n    <div className=\"my-0 mx-auto w-11/12\">\n      <form\n      className=\"p-10 mb-10 rounded-lg bg-gray-200 shadow-lg flex flex-col justify-center items-center divide-y divide-gray-900\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          requestPets();\n        }}\n      >\n        <label htmlFor=\"location\" className=\"search-label\">\n          Location{\" \"}\n          <input\n            className=\"search-control\"\n            id=\"location\"\n            value={location}\n            placeholder=\"Location\"\n            onChange={(event) => setLocation(event.target.value)}\n          />\n        </label>\n        {/* dropdown  */}\n        <label htmlFor=\"animal\" className=\"search-label\">\n          Animal\n          <select\n            className=\"search-control \"\n            id=\"animal\"\n            value={animal}\n            onChange={(event) => setAnimal(event.target.value)}\n            onBlur={(event) => setAnimal(event.target.value)}\n          >\n            <option />\n            {ANIMALS.map((animal) => (\n              <option value={animal} key={animal}>\n                {animal}\n              </option>\n            ))}\n          </select>\n        </label>\n\n        <label htmlFor=\"animal\" className=\"search-label\">\n          Breed\n          <select\n            className=\"search-control disabled:opacity-50\"\n            id=\"animal\"\n            value={breed}\n            onChange={(event) => setBreed(event.target.value)}\n            onBlur={(event) => setBreed(event.target.value)}\n          >\n            <option />\n            {breeds.map((breed) => (\n              <option value={breed} key={breed}>\n                {breed}\n              </option>\n            ))}\n          </select>\n        </label>\n\n        <label htmlFor=\"theme\" className=\"search-label\">\n          Theme\n          <select\n            className=\"search-control\"\n            value={theme}\n            onChange={(e) => setTheme(e.target.value)}\n            onBlur={(event) => setBreed(event.target.value)}\n          >\n            <option value=\"darkblue\">Dark Blue</option>\n            <option value=\"peru\">Peru</option>\n            <option value=\"chartreuse\">Chartreuse</option>\n            <option value=\"mediumorchid\">Medium orchid</option>\n          </select>\n        </label>\n        <button style={{ backgroundColor: theme }} className=\"rounded px-6 py-2 text-white hover:opacity-50 border-none\">Submit</button>\n      </form>\n      <Results pets={pets} />\n    </div>\n  );\n};\n\nexport default SearchParams;\n","import { StrictMode, useState, lazy, Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport ThemeContext from \"./ThemeContext\";\n// const Details = lazy(() => import('./Details'))\n// const SearchParams = lazy(() => import('./SearchParams'))\nimport Details from \"./Details\";\nimport SearchParams from \"./SearchParams\";\n\nconst App = () => {\n  const theme = useState(\"darkblue\");\n\n  return (\n    <StrictMode>\n      <ThemeContext.Provider value={theme}> \n        <div className=\"p-0 m-0\" style={{ background:\"url(http://pets-images.dev-apis.com/pets/wallpaperA.jpg)\" }}>\n      {/* <Suspense fallback={<h2>Loading route..</h2>}> */}\n        {/* <Router> */}\n          <header\n          className=\"w-full mb-10 text-center p-7 bg-gradient-to-b from-purple-400 via-pink-500 to-red-500\">\n            <Link to=\"/\" className=\"text-6xl text-white hover:text-gray-200\">\n              <h1>Adopt Me!</h1>\n            </Link>\n          </header>\n          <Switch>\n            <Route path=\"/details/:id\">\n              <Details theme={theme} />\n            </Route>\n            <Route path=\"/\">\n              <SearchParams />\n            </Route>\n          </Switch>\n        {/* </Router> */}\n      {/* </Suspense> */}\n      </div>\n    </ThemeContext.Provider>\n    </StrictMode>\n    \n  );\n};\n\n// ReactDOM.render(\n//   <StrictMode>\n//     <App />\n//   </StrictMode>,\n//   document.querySelector(\"#root\")\n// );\n\nexport default App","import express from 'express'\nimport {renderToString} from 'react-dom/server'\nimport {StaticRouter} from 'react-router-dom'\nimport fs from 'fs'\nimport App from '../src/App'\n\nconst PORT = process.env.PORT || 3000;\n\nconst html = fs.readFileSync(\"dist/index.html\").toString()\n\nconst parts = html.split(\"not rendered\")\n\nconst app = express()\n\napp.use('/dist', express.static('dist'))\napp.use((req, res) => {\n  const staticContext  = {}\n  const reactMarkup = (\n    <StaticRouter url={req.url} context={staticContext}>\n        <App />\n    </StaticRouter>\n  )\n\n  res.status(staticContext.statusCode || 200)\n  res.send(`${parts[0]}${renderToString(reactMarkup)}${parts[1]}`)\n  res.end()\n})\n\nconsole.log(`Listening on http://localhost:${PORT}`)\napp.listen(PORT)"]}